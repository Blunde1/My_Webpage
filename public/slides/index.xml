<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Slides on Berent Å. S. Lunde</title>
    <link>/slides/</link>
    <description>Recent content in Slides on Berent Å. S. Lunde</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    
	<atom:link href="/slides/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Information efficient gradient tree boosting</title>
      <link>/slides/mlmeetup/mlmeetup_presentation_bl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/mlmeetup/mlmeetup_presentation_bl/</guid>
      <description>OutlineBackgroundSupervised learningGradient boostingInformation efficient GTBFrequency domainJapanese tricksBottoms upExperimental illustrationsBiasConvergenceComparisonsRecap and possibilitiesBackgroundSupervised learningSupervised learningMapping \(f:A \rightarrow B\) using a finite dataset.What is a good model?A model that generalises well to unseen data.Generalises: average over new datawell: minimises Loss\(\tilde{f} = \arg\min_f {\mathbb{E}}_{\hat{w}}{\mathbb{E}}_{{\mathbf{x}},{y}}\left[{\mathcal{L}}\left({y}, f({\mathbf{x}}; \hat{w})\right)\right]\)Gradient boostingAlgorithm:</description>
    </item>
    
    <item>
      <title>Slides</title>
      <link>/slides/example-slides/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/slides/example-slides/</guid>
      <description>Welcome to Slides Academic
Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides  Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E  Code Highlighting Inline code: variable
Code block:
porridge = &amp;quot;blueberry&amp;quot; if porridge == &amp;quot;blueberry&amp;quot;: print(&amp;quot;Eating...&amp;quot;)  Math In-line math: $x + y = z$</description>
    </item>
    
  </channel>
</rss>